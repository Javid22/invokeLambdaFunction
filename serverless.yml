service: apigatewayproject

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - ses:*
      Resource:
        - arn:aws:dynamodb:us-east-1:891377170373:table/player-points

plugins:
  - serverless-webpack

package:
  individually: true

custom:
  tableName: player-points
  s3Sync:
    - bucketName: myserverlessdemoproject-2211
      localDir: uploadData

functions:
  getUser:
    handler: lambdas/endpoints/getUser.handler
    events:
      - http:
          path: get-user/{ID}
          method: get
          CORS: true
  getPlayerScore:
    handler: lambdas/endpoints/getPlayerScore.handler
    events:
      - http:
          path: get-player-score/{ID}
          method: get
          CORS: true
  setPlayerScore:
    handler: lambdas/endpoints/setPlayerScore.handler
    events:
      - http:
          path: set-player-score/{ID}
          method: post
          CORS: true
  sendEmail:
    handler: lambdas/endpoints/sendEmail.handler
    events:
      - http:
          path: send-email
          method: post
          CORS: true

resources:
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: myserverlessdemoproject-2211
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
      

